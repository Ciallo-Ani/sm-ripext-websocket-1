name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04,ubuntu-latest,windows-2019]
        include:
          - os: ubuntu-18.04
            target-archs: x86
            os_name: ubuntu-18.04

          - os: ubuntu-latest
            target-archs: x86
            os_name: ubuntu-latest

          - os: windows-2019
            target-archs: x86
            os_name: windows-2019

    steps:
      - name: Install Linux packages
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -yq --no-install-recommends gcc-multilib g++-multilib libssl-dev:i386

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: extension
          submodules: recursive

      - name: Checkout AMBuild
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      - name: Install AMBuild
        uses: BSFishy/pip-action@v1
        with:
          packages: ./ambuild

      - name: Build
        working-directory: extension
        shell: bash
        env:
          BREAKPAD_SYMBOL_SERVER: ${{ secrets.BREAKPAD_SYMBOL_SERVER }}
        run: |
          mkdir build && cd build
          perl ../curl/lib/mk-ca-bundle.pl
          python ../configure.py --enable-optimize --targets=${{ matrix.target-archs }} --sm-path ../sourcemod
          ambuild

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os_name }}
          path: extension/build/package

release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Package
        run: |
          version=`echo $GITHUB_REF | sed "s/refs\/tags\///"`
          7z a sm-ripext-${version}-ubuntu-18.04.zip ./ubuntu-18.04/*
          7z a sm-ripext-${version}-ubuntu-latest.zip ./ubuntu-latest/*
          7z a sm-ripext-${version}-windows-2019.zip ./windows-2019/*
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: '*.zip'
          tag: ${{ github.ref }}
          file_glob: true